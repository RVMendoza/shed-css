:root {
	--white: #ffffff;
	--black: #000000;
	--blue: #0F1A64;

	--ms-ratio: var(--minor-third);
	--mqs: n, xs, sm ,md, lg, xl;
	--ms: -dot1, -dot2, -dot3, -dot4, -dot5, -dot6, -dot7, -dot8, -dot9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10;
	--z: \.1, \.2, \.3, \.4, \.5, \.6, \.7, \.8, \.9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10;
	--f-f-styles: (sans, serif, mono), (f-f-sans, f-f-serif, f-f-mono);
	--f-f-sans: 'letter-gothic-std', sans-serif;
	--f-f-serif: Georgia, serif;
	--f-f-mono: Input, monospace;
	--f-s-styles: (normal, italic, oblique), (n, i, o);
	--f-w-min: 100;
	--f-w-max: 900;
	--l-h--default: 1;
	--l-h--tight: 1.2;
	--l-h--normal: 1.5;
	--l-h--loose: 1.75;
	--l-h: (d, t, n, l), (var(--l-h--default), var(--l-h--tight), var(--l-h--normal), var(--l-h--loose));
	--l-s--default: normal;
	--l-s--tight: -.04em;
	--l-s--normal: -.01em;
	--l-s--loose: .1em;
	--dirs: all, top, bottom, left, right, x, y;
	--dirs-short: a, t, b, l, r, x, y;
	--display-props: block, inline-block, inline, flex, table, table-cell, none;
	--display-shorthands: b, i-b, i, f, t, t-c, n;
	--pos-options: (absolute, relative, static, fixed, cover), (a, r, s, f, c);
	--sides-options: (top, bottom, left, right);
	--z-dot9: var(--ms-1);
	--z-dot8: var(--ms-2);
	--z-dot7: var(--ms-3);
	--z-dot6: var(--ms-4);
	--z-dot5: var(--ms-5);
	--z-dot4: var(--ms-6);
	--z-dot3: var(--ms-7);
	--z-dot2: var(--ms-8);
	--z-dot1: var(--ms-9);
	--z0: 0;
	--z1: var(--ms0);
	--z2: var(--ms1);
	--z3: var(--ms2);
	--z4: var(--ms3);
	--z5: var(--ms4);
	--z6: var(--ms5);
	--z7: var(--ms6);
	--z8: var(--ms7);
	--z9: var(--ms8);
	--z10: var(--ms9);
}

@custom-media --mq-xs (min-width: 20em);
@custom-media --mq-sm (min-width: 30em);
@custom-media --mq-md (min-width: 37em);
@custom-media --mq-lg (min-width: 50em);
@custom-media --mq-xl (min-width: 75em);

:any-link {
	color: inherit;
	text-decoration: none;
}

.link {
	color: var(--black);
	text-decoration: underline;
}

ul, ol {
	list-style-type: none;
	margin-top: 0;
	margin-bottom: 0;
	padding-left: 0;
}

@each $mq in n, xs, sm, md, lg, xl {
	@if $mq == n {
		@each $color in blue, white, black {
			.c\:$color {
				color: var(--$color);
			}

			.bg\:$color,
			.bg-c\:$color {
				background: var(--$color);

			}

			.hover\/c\:$color:hover {
				color: var(--$color);
			}

			.hover\/bg\:$color:hover,
			.hover\/bg-c\:$color:hover {
				background: var(--$color);
			}

			@for $i from 1 to 9 {
				.bg\:$color\.$i {
					background-color: color(var(--$color) alpha(calc($i / 10)));
				}

				.c\:$color\.$i {
					color: color(var(--$color) alpha(calc($i / 10)));
				}

				.hover\/bg\:$color\.$i:hover {
					background-color: color(var(--$color) alpha(calc($i / 10)));
				}

				.hover\/c\:$color\.$i:hover {
					color: color(var(--$color) alpha(calc($i / 10)));
				}
			}
		}
	}
	@else {
		@media(--mq-$mq) {
			@each $color in blue, white, black {
				.c\:$color\@$mq {
					color: var(--$color);
				}

				.bg\:$color\@$mq,
				.bg-c\:$color\@$mq {
					background: var(--$color);
				}

				.hover\/c\:$color\@$mq:hover {
					color: var(--$color);
				}

				.hover\/bg\:$color\@$mq:hover,
				.hover\/bg-c\:$color\@$mq:hover {
					background: var(--$color);
				}

				@for $i from 1 to 9 {
					.bg\:$color\.$i\@$mq {
						background-color: color(var(--$color) alpha(calc($i / 10)));
					}

					.c\:$color\.$i\@$mq {
						color: color(var(--$color) alpha(calc($i / 10)));
					}

					.hover\/bg\:$color\.$i\@$mq:hover {
						background-color: color(var(--$color) alpha(calc($i / 10)));
					}

					.hover\/c\:$color\.$i\@$mq:hover {
						color: color(var(--$color) alpha(calc($i / 10)));
					}
				}
			}
		}
	}
}


@each $color in blue, white, black {
	.b\:$(color) {
		border: 1px solid var(--$(color));
	}

	.b-b\:$(color) {
		border-bottom: 1px solid $(color);
	}

}

.b {
	border: 1px solid currentcolor;
}

.b-b {
	border-bottom: 1px solid currentcolor;
}

button {
	border: 0;
	background: transparent;
	color: inherit;
	font: inherit;
	padding: 0;
	line-height: 1;
}

p {
	margin-top: 0;
	margin-bottom: 0;
}

svg {
	color: inherit;
	fill: currentColor;
}

.cur\:p {
	cursor: pointer;
}

.h\:full {
	height: 100%;
}

body::-webkit-scrollbar {
	width: var(--z-dot5);
}

body::-webkit-scrollbar-track {
	-webkit-box-shadow: 0;
	background: var(--blue);
}

body::-webkit-scrollbar-thumb {
	background-color: color(var(--white) a(80%));
}

.m-w\:m {
	max-width: 40em;
}

pre, code {
	font-size: 16px;
}

.content {
	& h1, & h2, & h3, & h4, & h5, & h6 {
		margin-bottom: var(--z1);
		margin-top: var(--z1);
	}
	& a {
		color: var(--black);
		text-decoration: underline;
	}
	& ul {
		list-style-type: square;
		padding-left: var(--z3);
		margin-bottom: var(--z5);
	}
	& ul > li {
		margin-bottom: var(--z1);
	}
	& p {
		margin-bottom: var(--z2);
	}
	& code:not([class*="language"]) {
		background-color: var(--blue);
		color: var(--white);
		padding-left: var(--z-dot3);
		padding-right: var(--z-dot3);
		border-radius: var(--z-dot1);
	}
}
